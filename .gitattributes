#импорт всех нужных команд
import pandas as pd
from sklearn.metrics import r2_score
from sklearn.metrics import mean_squared_error
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split


#загрузка данных из csv файла для обучения модели
df = pd.read_csv('C://TD/test.csv')

#разделение данных на признаки и целевую переменную
x = df.drop(['FailureAfterMounth', 'serial_number', 'model'], axis=1)
y = df['FailureAfterMounth']

#разделение данных на обучающие и тестовые наборы
x_train, x_test, y_train, y_test = train_test_split(
    x, y, test_size=0.2, random_state=49)

#переменной lr присваивается функция линейной регрессии
lr = LinearRegression()
#функция fit() выполняет фактическое обучение модели на входных данных
lr.fit(x_train, y_train)

#применяем модель для прогнозирования обучающего и тестового наборов
y_lr_train_pred = lr.predict(x_train)
y_lr_test_pred = lr.predict(x_test)

#оценка точности модели
lr_train_mse = mean_squared_error(y_train, y_lr_train_pred) 
lr_train_r2 = r2_score(y_train, y_lr_train_pred)
lr_test_mse = mean_squared_error(y_test, y_lr_test_pred) 
lr_test_r2 = r2_score(y_test, y_lr_test_pred)

#применение модели к новым данным из нового файла csv
cf = pd.read_csv('C://TD/test1.csv')

#разделение данных на признаки
z = df.drop(['FailureAfterMounth', 'serial_number', 'model'], axis=1)

#предсказание выхода из строя жестких дисков
prediction = lr.predict(z)
print(prediction)
